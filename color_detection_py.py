# -*- coding: utf-8 -*-
"""color_detection.py

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1XxzhHlKCEatyuIO0XktrjHY3O5MWB2hu
"""

import numpy as np
from google.colab import drive
drive.mount('/content/drive')
import matplotlib.pyplot as plt
import pandas as pd
import cv2
from matplotlib.pyplot import imshow
from cv2 import namedWindow

img_path = '/content/drive/MyDrive/color_detection/colorpic.jpg'
csv_path = '/content/drive/MyDrive/color_detection/colors.csv'

index = ['color', 'color_name', 'hex', 'R', 'G', 'B']
data = pd.read_csv(csv_path, names=index, header=None)

data.head()

data.isna().sum()

data.isnull().sum()

data.duplicated().sum()

img = cv2.imread(img_path)
img = cv2.resize(img, (800, 600)) 
imshow(img)

clicked = False
r = g = b = x_pos = y_pos = 0

def draw_function(event, x,y,flags,param):
    if event == cv2.EVENT_LBUTTONDBLCLK:
        global b,g,r,x_pos,y_pos, clicked
        clicked = True
        x_pos = x
        y_pos = y
        b,g,r = img[y,x]
        b = int(b)
        g = int(g)
        r = int(r)

def getColorName(R,G,B):
    minimum = 10000
    for i in range(len(data)):
        d = abs(R- int(data.loc[i,"R"])) + abs(G- int(data.loc[i,"G"]))+ abs(B- int(data.loc[i,"B"]))
        if(d<=minimum):
            minimum = d
            cname = data.loc[i,"color_name"]
    return cname

from IPython.display import Image

Image('/content/drive/MyDrive/color_detection/colorpic.jpg')

namedWindow("COLOUR_DETECTION", cv2.WINDOW_AUTOSIZE)
cv2.setMouseCallback('COLOUR_DETECTION',draw_function)

while(1):
    imshow('COLOUR_DETECTION', img)
    if (clicked):
        #cv2.rectangle(image, startpoint, endpoint, color, thickness) -1 thickness fills rectangle entirely
        cv2.rectangle(img,(20,20), (750,60), (b,g,r), -1)

        #Creating text string to display ( Color name and RGB values )
        text = getColorName(r,g,b) + ' R='+ str(r) + ' G='+ str(g) + ' B='+ str(b)

        #cv2.putText(img,text,start,font(0-7), fontScale, color, thickness, lineType, (optional bottomLeft bool) )
        cv2.putText(img, text,(50,50),2,0.8,(255,255,255),2,cv2.LINE_AA)
  #For very light colours we will display text in black colour
        if(r+g+b>=600):
            cv2.putText(img, text,(50,50),2,0.8,(0,0,0),2,cv2.LINE_AA)

        clicked=False

    #Break the loop when user hits 'esc' key 
    if cv2.waitKey(20) & 0xFF ==27:
        break

cv2.destroyAllWindows()